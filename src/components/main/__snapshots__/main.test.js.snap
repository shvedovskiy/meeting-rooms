// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Main /> renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    counter={0}
    decrementCounter={[MockFunction]}
    incrementCounter={[MockFunction]}
    incrementCounterAsync={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="Main_header"
        >
          <img
            alt="logo"
            className="Main_logo"
            src="logo.svg"
          />
          <p>
            Edit 
            <code>
              src/App.js
            </code>
             and save to reload.
          </p>
          <a
            className="Main_link"
            href="https://reactjs.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn React
          </a>
        </header>,
        <main
          className="Main_content"
        >
          <div
            className="Main_counter"
          >
            <p>
              Counter: 
              0
            </p>
          </div>
          <div
            className="Main_buttons"
          >
            <button
              onClick={[Function]}
            >
              +1
            </button>
            <button
              onClick={[Function]}
            >
              -1
            </button>
            <button
              onClick={[Function]}
            >
              +1 Async
            </button>
          </div>
        </main>,
      ],
      "className": "Main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="Main_logo"
              src="logo.svg"
            />,
            <p>
              Edit 
              <code>
                src/App.js
              </code>
               and save to reload.
            </p>,
            <a
              className="Main_link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>,
          ],
          "className": "Main_header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "Main_logo",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Edit ",
                <code>
                  src/App.js
                </code>,
                " and save to reload.",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Edit ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "src/App.js",
                },
                "ref": null,
                "rendered": "src/App.js",
                "type": "code",
              },
              " and save to reload.",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Learn React",
              "className": "Main_link",
              "href": "https://reactjs.org",
              "rel": "noopener noreferrer",
              "target": "_blank",
            },
            "ref": null,
            "rendered": "Learn React",
            "type": "a",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="Main_counter"
            >
              <p>
                Counter: 
                0
              </p>
            </div>,
            <div
              className="Main_buttons"
            >
              <button
                onClick={[Function]}
              >
                +1
              </button>
              <button
                onClick={[Function]}
              >
                -1
              </button>
              <button
                onClick={[Function]}
              >
                +1 Async
              </button>
            </div>,
          ],
          "className": "Main_content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                Counter: 
                0
              </p>,
              "className": "Main_counter",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Counter: ",
                  0,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Counter: ",
                0,
              ],
              "type": "p",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  onClick={[Function]}
                >
                  +1
                </button>,
                <button
                  onClick={[Function]}
                >
                  -1
                </button>,
                <button
                  onClick={[Function]}
                >
                  +1 Async
                </button>,
              ],
              "className": "Main_buttons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "+1",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "+1",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "-1",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "-1",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "+1 Async",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "+1 Async",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="Main_header"
          >
            <img
              alt="logo"
              className="Main_logo"
              src="logo.svg"
            />
            <p>
              Edit 
              <code>
                src/App.js
              </code>
               and save to reload.
            </p>
            <a
              className="Main_link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>
          </header>,
          <main
            className="Main_content"
          >
            <div
              className="Main_counter"
            >
              <p>
                Counter: 
                0
              </p>
            </div>
            <div
              className="Main_buttons"
            >
              <button
                onClick={[Function]}
              >
                +1
              </button>
              <button
                onClick={[Function]}
              >
                -1
              </button>
              <button
                onClick={[Function]}
              >
                +1 Async
              </button>
            </div>
          </main>,
        ],
        "className": "Main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="Main_logo"
                src="logo.svg"
              />,
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>,
              <a
                className="Main_link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>,
            ],
            "className": "Main_header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "Main_logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Edit ",
                  <code>
                    src/App.js
                  </code>,
                  " and save to reload.",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Edit ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "src/App.js",
                  },
                  "ref": null,
                  "rendered": "src/App.js",
                  "type": "code",
                },
                " and save to reload.",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Learn React",
                "className": "Main_link",
                "href": "https://reactjs.org",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "Learn React",
              "type": "a",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="Main_counter"
              >
                <p>
                  Counter: 
                  0
                </p>
              </div>,
              <div
                className="Main_buttons"
              >
                <button
                  onClick={[Function]}
                >
                  +1
                </button>
                <button
                  onClick={[Function]}
                >
                  -1
                </button>
                <button
                  onClick={[Function]}
                >
                  +1 Async
                </button>
              </div>,
            ],
            "className": "Main_content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p>
                  Counter: 
                  0
                </p>,
                "className": "Main_counter",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Counter: ",
                    0,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Counter: ",
                  0,
                ],
                "type": "p",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    onClick={[Function]}
                  >
                    +1
                  </button>,
                  <button
                    onClick={[Function]}
                  >
                    -1
                  </button>,
                  <button
                    onClick={[Function]}
                  >
                    +1 Async
                  </button>,
                ],
                "className": "Main_buttons",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "+1",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "+1",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "-1",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "-1",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "+1 Async",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "+1 Async",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
